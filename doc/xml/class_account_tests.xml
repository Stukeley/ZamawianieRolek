<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="pl">
  <compounddef id="class_account_tests" kind="class" language="C#" prot="public">
    <compoundname>AccountTests</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_account_tests_1adeb45372b1fa233d3e1f703168d763f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AccountTests.Setup</definition>
        <argsstring>()</argsstring>
        <name>Setup</name>
        <qualifiedname>AccountTests.Setup</qualifiedname>
        <briefdescription>
<para>Funkcja setup, inicjalizująca bazę danych przed każdym wywołanym testem. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ZamawianieRolek.Tests/AccountTests.cs" line="18" column="13" bodyfile="ZamawianieRolek.Tests/AccountTests.cs" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_account_tests_1aa15638865e7c0bcdd7f95ca57a8fef14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AccountTests.TestRegister_WorksForValidInput</definition>
        <argsstring>(string email, string name, string surname, string password, string phoneNumber)</argsstring>
        <name>TestRegister_WorksForValidInput</name>
        <qualifiedname>AccountTests.TestRegister_WorksForValidInput</qualifiedname>
        <param>
          <type>string</type>
          <declname>email</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>surname</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
        </param>
        <param>
          <type>string</type>
          <declname>phoneNumber</declname>
        </param>
        <briefdescription>
<para>Test parametryzowany sprawdzający, czy rejestracja (za pomocą danych użytkownika) działa poprawnie dla poprawnych danych. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ZamawianieRolek.Tests/AccountTests.cs" line="30" column="13" bodyfile="ZamawianieRolek.Tests/AccountTests.cs" bodystart="30" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_account_tests_1a7b215c19e2c62f12329a41989b59508e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AccountTests.TestRegisterGoogle_WorksForValidInput</definition>
        <argsstring>(string email, string password)</argsstring>
        <name>TestRegisterGoogle_WorksForValidInput</name>
        <qualifiedname>AccountTests.TestRegisterGoogle_WorksForValidInput</qualifiedname>
        <param>
          <type>string</type>
          <declname>email</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Test parametryzowany sprawdzający, czy rejestracja (za pomocą konta Google) działa poprawnie dla poprawnych danych. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ZamawianieRolek.Tests/AccountTests.cs" line="51" column="13" bodyfile="ZamawianieRolek.Tests/AccountTests.cs" bodystart="51" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_account_tests_1aec3489ae7824473abfe080bd60136c5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AccountTests.TestRegister_ThrowsForInvalidInput</definition>
        <argsstring>(string email, string name, string surname, string password, string phoneNumber)</argsstring>
        <name>TestRegister_ThrowsForInvalidInput</name>
        <qualifiedname>AccountTests.TestRegister_ThrowsForInvalidInput</qualifiedname>
        <param>
          <type>string</type>
          <declname>email</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>surname</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
        </param>
        <param>
          <type>string</type>
          <declname>phoneNumber</declname>
        </param>
        <briefdescription>
<para>Test parametryzowany sprawdzający, czy rejestracja wyrzuca wyjątek dla niepoprawnych danych wejściowych. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ZamawianieRolek.Tests/AccountTests.cs" line="75" column="13" bodyfile="ZamawianieRolek.Tests/AccountTests.cs" bodystart="75" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_account_tests_1a100e3399de3f836cb31af356435e84c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AccountTests.TestRegister_ThrowsForNullInput</definition>
        <argsstring>()</argsstring>
        <name>TestRegister_ThrowsForNullInput</name>
        <qualifiedname>AccountTests.TestRegister_ThrowsForNullInput</qualifiedname>
        <briefdescription>
<para>Test sprawdzający, czy rejestracja wyrzuca wyjątek dla danych wejściowych będących null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ZamawianieRolek.Tests/AccountTests.cs" line="92" column="13" bodyfile="ZamawianieRolek.Tests/AccountTests.cs" bodystart="92" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_account_tests_1aebd6eec1ca3e1777cbc723c783228d28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void AccountTests.TestLogin_ThrowsWhenAccountNotFound</definition>
        <argsstring>(string email, string password)</argsstring>
        <name>TestLogin_ThrowsWhenAccountNotFound</name>
        <qualifiedname>AccountTests.TestLogin_ThrowsWhenAccountNotFound</qualifiedname>
        <param>
          <type>string</type>
          <declname>email</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Test parametryzowany sprawdzający, czy logowanie wyrzuca wyjątek w przypadku, gdy występuje próba zalogowania się na nieistniejące konto. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ZamawianieRolek.Tests/AccountTests.cs" line="111" column="13" bodyfile="ZamawianieRolek.Tests/AccountTests.cs" bodystart="111" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Klasa zawierająca testy związane z klasą <ref refid="class_account" kindref="compound">Account</ref> - rejestracją i logowaniem użytkownika. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ZamawianieRolek.Tests/AccountTests.cs" line="12" column="7" bodyfile="ZamawianieRolek.Tests/AccountTests.cs" bodystart="13" bodyend="123"/>
    <listofallmembers>
      <member refid="class_account_tests_1adeb45372b1fa233d3e1f703168d763f4" prot="public" virt="non-virtual"><scope>AccountTests</scope><name>Setup</name></member>
      <member refid="class_account_tests_1aebd6eec1ca3e1777cbc723c783228d28" prot="public" virt="non-virtual"><scope>AccountTests</scope><name>TestLogin_ThrowsWhenAccountNotFound</name></member>
      <member refid="class_account_tests_1aec3489ae7824473abfe080bd60136c5e" prot="public" virt="non-virtual"><scope>AccountTests</scope><name>TestRegister_ThrowsForInvalidInput</name></member>
      <member refid="class_account_tests_1a100e3399de3f836cb31af356435e84c6" prot="public" virt="non-virtual"><scope>AccountTests</scope><name>TestRegister_ThrowsForNullInput</name></member>
      <member refid="class_account_tests_1aa15638865e7c0bcdd7f95ca57a8fef14" prot="public" virt="non-virtual"><scope>AccountTests</scope><name>TestRegister_WorksForValidInput</name></member>
      <member refid="class_account_tests_1a7b215c19e2c62f12329a41989b59508e" prot="public" virt="non-virtual"><scope>AccountTests</scope><name>TestRegisterGoogle_WorksForValidInput</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
